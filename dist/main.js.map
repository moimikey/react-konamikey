{"mappings":";;;;;;;;;;;;;;;;AAEO,SAAS,0CAAO,WACrB,UAAU,KAAO,aACjB,QAAQ,WACR,OAAO,YACP,WAAW,MACZ;IACC,MAAM,UAAU,CAAA,GAAA,mBAAK,EAAE;IAEvB,MAAM,YAAY,CAAC;QACjB,IAAI,GAAG,KAAK,QAAQ,CAAC,QAAQ,OAAO,CAAC,IACrC,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,WAAW,OAAO,QAAQ,CAAC,QAAQ,OAAO,CAAC,CAAC,YAAY;WACrE,QAAQ,OAAO,IAAI,IACnB,QAAQ,OAAO,GAAG;QACvB,IAAI,QAAQ,OAAO,KAAK,SAAS,MAAM,EAAE;YACvC;YACA,QAAQ,OAAO,GAAG;QACpB;IACF;IAEA,MAAM,SAAS;QACb,IAAI,WAAW,QAAQ,gBAAgB,EACrC,QAAQ,gBAAgB,CAAC,WAAW;IAExC;IAEA,MAAM,WAAW;QACf,IAAI,WAAW,QAAQ,mBAAmB,EACxC,QAAQ,mBAAmB,CAAC,WAAW;IAE3C;IAEA,CAAA,GAAA,sBAAQ,EAAE;QACR,IAAI,CAAE,CAAA,mBAAmB,QAAO,GACpB;QAEZ;QAEA,OAAO;YACL;QACF;IACF,GAAG;QAAC;KAAQ;IAEZ,IAAI,mBAAmB,UACrB,OAAO,QAAQ;QACb,OAAO,CAAC;YACN,UAAU;QACZ;IACF;IAGF,OAAO;AACT;IAEA,2CAAe","sources":["src/index.ts"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nexport function Konami({\n  payload = () => {},\n  sequence,\n  element,\n  children = null,\n}) {\n  const pressed = useRef(0);\n\n  const onkeydown = (evt) => {\n    evt.key === sequence[pressed.current] ||\n    evt.key.substr(5).toLowerCase() === sequence[pressed.current] // ArrowXXXX\n      ? (pressed.current += 1)\n      : (pressed.current = 0);\n    if (pressed.current === sequence.length) {\n      payload();\n      pressed.current = 0;\n    }\n  };\n\n  const listen = () => {\n    if (element && element.addEventListener) {\n      element.addEventListener(\"keydown\", onkeydown);\n    }\n  };\n\n  const unlisten = () => {\n    if (element && element.removeEventListener) {\n      element.removeEventListener(\"keydown\", onkeydown);\n    }\n  };\n\n  useEffect(() => {\n    if (!(element instanceof Function)) {\n      element = element;\n    }\n    listen();\n\n    return () => {\n      unlisten();\n    };\n  }, [element]);\n\n  if (element instanceof Function) {\n    return element({\n      refFn: (ref) => {\n        element = ref;\n      },\n    });\n  }\n\n  return children;\n}\n\nexport default Konami;\n"],"names":[],"version":3,"file":"main.js.map"}